#!/usr/bin/env bash

SELF=$(cd $(dirname $0) && pwd)
. "$SELF/util.sh"

if [ -z "${JAVA_HOME}" -a "$(command -v javac)" ]; then
  if [ "$(uname -s)" = "Darwin" ]; then
    # For some versions of macOS, "/usr/bin/javac" is a real file instead of a symbolic link,
    # so the JAVA_HOME may be set to path "/usr" improperly.
    # The following command is an appropriate way of setting JAVA_HOME on macOS.
    export JAVA_HOME="$(/usr/libexec/java_home)"
  else
    export JAVA_HOME="$(dirname $(dirname $(realpath $(command -v javac))))"
  fi
fi

# Determine the current working directory
_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

CM_EXT_BRANCH=`tr -d "[:space:]" < "${_DIR}/../cm_ext-branch.txt"`

cm_ext_home="${_DIR}/cm_ext-${CM_EXT_BRANCH}"
exec_jar="${cm_ext_home}/validator/target/validator.jar"
local_tarball="${cm_ext_home}.tar.gz"
remote_tarball="https://github.com/cloudera/cm_ext/archive/refs/heads/${CM_EXT_BRANCH}.tar.gz"
wget_opts="--no-verbose"

if [ ! -d "${cm_ext_home}" ]; then
  echo "exec: wget ${wget_opts} ${remote_tarball}" 1>&2
  wget ${wget_opts} -O "${local_tarball}" "${remote_tarball}"
  tar -xzf "${local_tarball}" -C "${_DIR}"
  rm -f "${local_tarball}"
fi

if [ ! -f "${exec_jar}" ]; then
  echo "exec: ${_DIR}/mvn clean package -DskipTests" 1>&2
  (cd "${cm_ext_home}" && "${_DIR}"/mvn clean package -DskipTests)
fi

exec "${JAVA_HOME}/bin/java" -jar "${exec_jar}" "$@"
